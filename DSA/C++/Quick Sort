// Quick Sort
// Its a sorting algorithm based on Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot.
// We put Pivot element X at its correct position in sorted array and put all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x.
// Time Compexity :-    Average Case- O(N*logN)
//                      Worst Case - O(N^2)
       
#include<iostream>
using namespace std;

int partition(int a[],int p,int r)        // putting elements smaller than x at left and greater at right
{
    int x=a[r];
    int i=p-1;
    for(int j=p;j<=r-1;j++)
    {
        if(a[j]<=x)
        {
            i++;
            swap(a[i],a[j]);
        }
    }
    swap(a[i+1],a[r]);
    return i+1;
}

void quick_sort(int a[],int p,int r)
{
    if(p<r)
    {
        int q=partition(a,p,r);           
        quick_sort(a,p,q-1);            // calling quick sort at elements before x
        quick_sort(a,q+1,r);            // calling quick sort at elements after x
    }
}

int main()
{
    cout<<"Enter size of array :- ";
    int n; cin>>n;
    int i;
    cout<<"Enter the array :- ";
    int a[n];
    for(i=0;i<n;i++)cin>>a[i];
    quick_sort(a,0,n-1);
    cout<<"The sorted array is :- \n";
    for(i=0;i<n;i++)cout<<a[i]<<"  ";
}
